import {
  CarouselModule,
  ControllerModule,
  CoreModule,
  LightboxDefaultProps,
  NavigationModule,
  NoScrollModule,
  PortalModule,
  ToolbarModule,
  createNode,
  withPlugins
} from "./chunk-6PS7IDHY.js";
import "./chunk-NYHBQTAG.js";
import {
  __toESM,
  require_react
} from "./chunk-P5XWQMHZ.js";

// node_modules/yet-another-react-lightbox/dist/Lightbox.js
var React = __toESM(require_react(), 1);
function renderNode(node, props) {
  var _a;
  return React.createElement(node.module.component, { key: node.module.name, ...props }, (_a = node.children) === null || _a === void 0 ? void 0 : _a.map((child) => renderNode(child, props)));
}
function fixupIndex({ index, slides, ...rest }) {
  return {
    index: index >= 0 && index < slides.length ? index : 0,
    slides,
    ...rest
  };
}
function Lightbox(props) {
  const { carousel, animation, render, toolbar, controller, on, plugins, ...restProps } = props;
  const { carousel: defaultCarousel, animation: defaultAnimation, render: defaultRender, toolbar: defaultToolbar, controller: defaultController, on: defaultOn, ...restDefaultProps } = LightboxDefaultProps;
  const { config, augmentation } = withPlugins([
    createNode(PortalModule, [
      createNode(NoScrollModule, [
        createNode(ControllerModule, [
          createNode(CarouselModule),
          createNode(ToolbarModule),
          createNode(NavigationModule)
        ])
      ])
    ])
  ], plugins, [fixupIndex]);
  const augmentedProps = augmentation({
    carousel: { ...defaultCarousel, ...carousel },
    animation: { ...defaultAnimation, ...animation },
    render: { ...defaultRender, ...render },
    toolbar: { ...defaultToolbar, ...toolbar },
    controller: { ...defaultController, ...controller },
    on: { ...defaultOn, ...on },
    ...restDefaultProps,
    ...restProps
  });
  if (!augmentedProps.open)
    return null;
  return React.createElement(React.Fragment, null, renderNode(createNode(CoreModule, config), augmentedProps));
}

// node_modules/yet-another-react-lightbox/dist/index.js
var dist_default = Lightbox;
export {
  Lightbox,
  dist_default as default
};
//# sourceMappingURL=yet-another-react-lightbox.js.map
